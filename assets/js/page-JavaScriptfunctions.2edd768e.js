(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{499:function(e,t,a){"use strict";a.r(t);var n=a(1),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"javascript-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-functions"}},[e._v("#")]),e._v(" JavaScript functions")]),e._v(" "),a("h2",{attrs:{id:"what-are-the-three-ways-to-syntactically-write-a-function-what-are-the-differences-in-how-the-function-acts-if-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-ways-to-syntactically-write-a-function-what-are-the-differences-in-how-the-function-acts-if-any"}},[e._v("#")]),e._v(" What are the three ways to syntactically write a function? What are the differences in how the function acts (if any)?")]),e._v(" "),a("ul",[a("li",[a("ol",[a("li",[e._v('A Function Declaration defines a named function. To create a function declaration you use the function keyword followed by the name of the function. ex: "function name(parameters) {statements}"')])])]),e._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[e._v('A Function Expressions defines a named or anonymous function. An anonymous function is a function that has no name. Function Expressions are not hoisted, and therefore cannot be used before they are defined. ex: "let name = function(parameters) {statements}"')])])]),e._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[e._v('An Arrow Function Expression is a shorter syntax for writing function expressions. Arrow functions do not create their own this value. ex: "let name = (parameters) => {statements}"')])])])]),e._v(" "),a("h2",{attrs:{id:"what-is-the-difference-between-parameters-and-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-parameters-and-arguments"}},[e._v("#")]),e._v(" What is the difference between Parameters and Arguments?")]),e._v(" "),a("ul",[a("li",[e._v("Parameters are used when defining a function, they are the names created in the function definition. Arguments, on the other hand, are the values the function receives from each parameter when the function is executed (invoked).")])]),e._v(" "),a("h2",{attrs:{id:"what-are-higher-order-functions-can-you-provide-an-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-higher-order-functions-can-you-provide-an-example"}},[e._v("#")]),e._v(" What are higher order functions? Can you provide an example?")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("When a function accepts another function as a parameter, or returns a function, it is called a higher-order function. ex: Array.prototype.map, Array.prototype.filters")])]),e._v(" "),a("li",[a("p",[e._v("https://talanweeks.github.io/js-tests-loops-and-arrays/")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);